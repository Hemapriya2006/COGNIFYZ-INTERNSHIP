Chat Client:

import java.io.*;
import java.net.*;

public class ChatClient {
    public static void main(String[] args) throws IOException {
        Socket socket = new Socket("localhost", 12345); 
        BufferedReader input = new BufferedReader(new InputStreamReader(socket.getInputStream()));
        PrintWriter output = new PrintWriter(socket.getOutputStream(), true);
        BufferedReader userInput = new BufferedReader(new InputStreamReader(System.in));
        Thread readThread = new Thread(() -> {
            try {
                String message;
                while ((message = input.readLine()) != null) {
                    System.out.println(message); 
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        });
        readThread.start();
        System.out.println("Enter your username: ");
        String userName = userInput.readLine();
        output.println(userName);
        String message;
        while ((message = userInput.readLine()) != null) {
            output.println(message);
        }
    }
}


Chat Server:

import java.io.*;
import java.net.*;
import java.util.*;

public class ChatServer {
    private static List<PrintWriter> clients = new ArrayList<>(); 
    private static List<String> userNames = new ArrayList<>(); 
    public static void main(String[] args) throws IOException {
        System.out.println("Chat server started...");
        ServerSocket serverSocket = new ServerSocket(12345); 
        try {
            while (true) {
                Socket socket = serverSocket.accept();
                new ClientHandler(socket).start();
            }
        } finally {
            serverSocket.close();
        }
    }
    private static class ClientHandler extends Thread {
        private Socket socket;
        private PrintWriter out;
        private BufferedReader in;
        public ClientHandler(Socket socket) {
            this.socket = socket;
        }
        public void run() {
            try {
                in = new BufferedReader(new InputStreamReader(  socket.getInputStream()));
                out = new PrintWriter(socket.getOutputStream(), true);
                out.println("Enter your username: ");
                String userName = in.readLine();
                synchronized (clients) {
                    clients.add(out);
                    userNames.add(userName);
                }
                if (clients.size() == 1) {
                    out.println("Wait, no one else has joined yet.");
                }
                if (clients.size() == 2) {
                    out.println("You are now connected with " + userNames.get(0));
                    PrintWriter firstUserOut = clients.get(0);
                    firstUserOut.println(userNames.get(1) + " has joined. You can start chatting now!");
                }
                String message;
                while ((message = in.readLine()) != null) {
                    if (message.equalsIgnoreCase("bye")) {
                        break;
                    }
                    if (clients.size() == 2) {
                        for (PrintWriter writer : clients) {
                            writer.println(userName + ": " + message);
                        }
                    } else {
                        out.println("Waiting for another user to join...");
                    }
                }
            } catch (IOException e) {
                System.out.println("Error handling client: " + e.getMessage());
            } finally {
                try {
                    socket.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }

                synchronized (clients) {
                    clients.remove(out);
                    userNames.remove(userNames.size() - 1);
                }
            }
        }
    }
}
